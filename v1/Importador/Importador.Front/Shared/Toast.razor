@if (Visible)
{
    <div class="toast @Kind" style="@PositionStyle">@Message</div>
}

@code {
    [Parameter] public string Message { get; set; } = "";
    // ok | err | warn | info
    [Parameter] public string Kind { get; set; } = "ok";
    // bottom-right | bottom-left | top-right | top-left
    [Parameter] public string Position { get; set; } = "bottom-right";
    [Parameter] public int TimeoutMs { get; set; } = 3500;

    bool Visible;

    string PositionStyle => Position switch
    {
        "top-right" => "top:20px; right:20px;",
        "top-left" => "top:20px; left:20px;",
        "bottom-left" => "bottom:20px; left:20px;",
        _ => "bottom:20px; right:20px;"
    };

    protected override async Task OnParametersSetAsync()
    {
        Visible = !string.IsNullOrWhiteSpace(Message);
        if (Visible)
        {
            await Task.Delay(TimeoutMs);
            Visible = false;
            StateHasChanged();
        }
    }
}
